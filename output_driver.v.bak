module output_driver (
    input wire clk, reset,
    input wire [2:0] estado_atual,
    output reg [15:0] display,
    output reg CLOSE,
    output reg abertura
);
    function [15:0] estado_para_display;
        input [2:0] estado;
        case (estado)
            3'b000: estado_para_display = {8'h77, 8'h7C}; // AB
            3'b001: estado_para_display = {8'h77, 8'h38}; // AL
            3'b010: estado_para_display = {8'h73, 8'h71}; // PF
            3'b011: estado_para_display = {8'h71, 8'h79}; // FE
            3'b100: estado_para_display = {8'h79, 8'h06}; // E1
            3'b101: estado_para_display = {8'h79, 8'h5B}; // E2
            3'b110: estado_para_display = {8'h7C, 8'h38}; // BL
            3'b111: estado_para_display = {8'h79, 8'h37}; // EM
           default: estado_para_display = {8'h40, 8'h40}; // --
        endcase
    endfunction

    always @(posedge clk) begin
        if (reset) begin
            display <= 16'h4040;
            CLOSE <= 1'b0;
            abertura <= 1'b0;
        end else begin
            display <= estado_para_display(estado_atual);
            CLOSE <= (estado_atual == 3'b011);
            abertura <= (estado_atual == 3'b000);
        end
    end
endmodule